version: '3'

services:
    web:
        image: nginx:stable-alpine
        container_name: "${DOCKER_CONTAINER_NAME-lariele}_web"
        ports:
            - "${DOCKER_WEB_PORT-80}:80"
            - "8080:8080"
            - "5137:5137"
        volumes:
            - ./../:/var/www/html
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - app
            - db
        networks:
            default:
                aliases:
                    - lariele.test

    app:
        build:
            context: .
            dockerfile: php/Dockerfile
        container_name: "${DOCKER_CONTAINER_NAME-lariele}_app"
        ports:
            - "${DOCKER_BACKEND_PORT-9000}:9000"
            - "3000:3000"
            - "81:81"
        expose:
            - 3000
        volumes:
            - ./../:/var/www/html
            - ./php/php.ini:/usr/local/etc/php/php.ini
            - ./php/conf.d/opcache.ini:/usr/local/etc/php/conf.d/opcache.ini
            #       Allow Xdebug in dockerfile and docker-compose
            #            - ./php/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
            - ./php/conf.d/error_reporting.ini:/usr/local/etc/php/conf.d/error_reporting.ini

    db:
        image: mariadb:latest
        container_name: "${DOCKER_CONTAINER_NAME-lariele}_db"
        restart: "unless-stopped"
        ports:
            - "${DOCKER_DB_PORT-3306}:3306"
        volumes:
            - ./mysql/my.cnf:/etc/mysql/my.cnf
        environment:
            MYSQL_DATABASE: lariele
            MYSQL_USER: lariele
            MYSQL_PASSWORD: 123
            MYSQL_ROOT_PASSWORD: 123
        networks:
            default:
                aliases:
                    - db

    redis:
        image: redis
        container_name: "${DOCKER_CONTAINER_NAME-lariele}_redis"
        restart: "unless-stopped"
        ports:
            - "${DOCKER_REDIS_PORT-6379}:6379"
        networks:
            default:
                aliases:
                    - redis

    phpmyadmin:
        image: phpmyadmin
        container_name: "${DOCKER_CONTAINER_NAME-lariele}_phpmyadmin"
        restart: "unless-stopped"
        ports:
            - "${DOCKER_PMA_PORT-8081}:80"
        environment:
            PMA_HOST: db
            PMA_USER: lariele
            PMA_PASSWORD: 123

volumes:
    dbdata:
        driver: local
    rabbitmq_data:
        driver: local
